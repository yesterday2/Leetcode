一、排序算法 code 时间空间复杂度、 

1、冒泡排序
2、选择排序
3、插入排序
4、归并排序
5、快速排序
荷兰国旗问题
6、堆排序
堆结构，
获得连续数字的中位数

7、希尔排序没讲

8、桶排序下的基数排序
8.1 0-N（N比较小）的统计频率然后排序
8.2 使用O(n)复杂度条件下，排序后相邻两个数的最大差值。


二、题目讲解
1、用固定长度的数组实现栈、队列。
2、用栈实现getMin()函数。 使用一个单调栈，如果下一个数比栈顶小，压入最小数，否则压入最大值
弹出操作：如果为空，返回错误，否则返回单调栈顶。
3、用队列实现栈、用栈实现队列。
4、转圈打印矩阵  正方形顺时针90度打印矩阵  之字形打印矩阵
5、打印链表的公共部分： 类似于mergesort的merge部分
6、判断链表是否是回文：（1）遍历，用一个栈存储所有元素，再遍历，与栈中元素对比；（2）快慢指针，找到链表中点；满指针后半段进行压栈；再遍历，弹栈
（3）快慢指针，走到中点，把右半部分链表反转，两个指针头遍历。 退出的时候把链表恢复回来。

 7、将单向链表划分为左边小中间相等、右边大的形式：解（1）暴力解，链表转化为数组，荷兰国旗问题（2）用三个容器，less,equal,more分别把整个链表分为三部分。最后串起来
 8、复制含有随机指针的链表。（1）暴力哈希（2）将每一个节点复制，插入到原有链表节点的下一个节点。这样就可以操作了。
 9、两个链表相交的三个问题。
    9.1 是否有环 （1）暴力哈希，返回第一个入环节点（2）快慢指针，返回第一个入环节点
    9.2 若都无环，统计len1 endNode1, len2 endNode2。若endNode1!=endNode2, 则没有公共节点，若endNode1==endNode2，若len1>len2,len1先走len-len2的长度，然后两个链表同时走，并判断相等
    9.3 若一个有环一个无环，没有公共节点。若都有环，loop1遍历环内节点，是否查询到loop2，若查询到返货loop1或者loop2都可；若没有查询到，则没有公共节点
 
 10、二叉树的后继节点
 11、二叉树是否是二叉搜索树，是否是二叉平衡树
 12、统计二叉树的节点数
 
 13:设计一个RandomPool 结构

